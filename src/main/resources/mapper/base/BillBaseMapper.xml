<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.achan.dao.base.BillBaseMapper" >
  <resultMap id="BaseResultMap" type="com.achan.entity.base.BillBase" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="out_in" property="outIn" jdbcType="BIT" />
    <result column="out_in_type_id" property="outInTypeId" jdbcType="CHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="total_price" property="totalPrice" jdbcType="DECIMAL" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="updateuser" property="updateuser" jdbcType="VARCHAR" />
    <result column="storehouse_id" property="storehouseId" jdbcType="CHAR" />
    <result column="from_to" property="fromTo" jdbcType="VARCHAR" />
    <result column="applytime" property="applytime" jdbcType="TIMESTAMP" />
    <result column="apply_user_id" property="applyUserId" jdbcType="CHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, number, name, out_in, out_in_type_id, count, total_price, updatetime, updateuser, 
    storehouse_id, from_to, applytime, apply_user_id, state, remark, deleted
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.achan.entity.base.BillBaseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bill
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from bill
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.achan.entity.base.BillBaseExample" >
    delete from bill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.achan.entity.base.BillBase" >
    insert into bill (id, number, name, 
      out_in, out_in_type_id, count, 
      total_price, updatetime, updateuser, 
      storehouse_id, from_to, applytime, 
      apply_user_id, state, remark, 
      deleted)
    values (#{id,jdbcType=CHAR}, #{number,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{outIn,jdbcType=BIT}, #{outInTypeId,jdbcType=CHAR}, #{count,jdbcType=INTEGER}, 
      #{totalPrice,jdbcType=DECIMAL}, #{updatetime,jdbcType=TIMESTAMP}, #{updateuser,jdbcType=VARCHAR}, 
      #{storehouseId,jdbcType=CHAR}, #{fromTo,jdbcType=VARCHAR}, #{applytime,jdbcType=TIMESTAMP}, 
      #{applyUserId,jdbcType=CHAR}, #{state,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, 
      #{deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.achan.entity.base.BillBase" >
    insert into bill
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="outIn != null" >
        out_in,
      </if>
      <if test="outInTypeId != null" >
        out_in_type_id,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="totalPrice != null" >
        total_price,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="updateuser != null" >
        updateuser,
      </if>
      <if test="storehouseId != null" >
        storehouse_id,
      </if>
      <if test="fromTo != null" >
        from_to,
      </if>
      <if test="applytime != null" >
        applytime,
      </if>
      <if test="applyUserId != null" >
        apply_user_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="outIn != null" >
        #{outIn,jdbcType=BIT},
      </if>
      <if test="outInTypeId != null" >
        #{outInTypeId,jdbcType=CHAR},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null" >
        #{updateuser,jdbcType=VARCHAR},
      </if>
      <if test="storehouseId != null" >
        #{storehouseId,jdbcType=CHAR},
      </if>
      <if test="fromTo != null" >
        #{fromTo,jdbcType=VARCHAR},
      </if>
      <if test="applytime != null" >
        #{applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="applyUserId != null" >
        #{applyUserId,jdbcType=CHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.achan.entity.base.BillBaseExample" resultType="java.lang.Integer" >
    select count(*) from bill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bill
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.outIn != null" >
        out_in = #{record.outIn,jdbcType=BIT},
      </if>
      <if test="record.outInTypeId != null" >
        out_in_type_id = #{record.outInTypeId,jdbcType=CHAR},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.totalPrice != null" >
        total_price = #{record.totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateuser != null" >
        updateuser = #{record.updateuser,jdbcType=VARCHAR},
      </if>
      <if test="record.storehouseId != null" >
        storehouse_id = #{record.storehouseId,jdbcType=CHAR},
      </if>
      <if test="record.fromTo != null" >
        from_to = #{record.fromTo,jdbcType=VARCHAR},
      </if>
      <if test="record.applytime != null" >
        applytime = #{record.applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.applyUserId != null" >
        apply_user_id = #{record.applyUserId,jdbcType=CHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.deleted != null" >
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bill
    set id = #{record.id,jdbcType=CHAR},
      number = #{record.number,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      out_in = #{record.outIn,jdbcType=BIT},
      out_in_type_id = #{record.outInTypeId,jdbcType=CHAR},
      count = #{record.count,jdbcType=INTEGER},
      total_price = #{record.totalPrice,jdbcType=DECIMAL},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      updateuser = #{record.updateuser,jdbcType=VARCHAR},
      storehouse_id = #{record.storehouseId,jdbcType=CHAR},
      from_to = #{record.fromTo,jdbcType=VARCHAR},
      applytime = #{record.applytime,jdbcType=TIMESTAMP},
      apply_user_id = #{record.applyUserId,jdbcType=CHAR},
      state = #{record.state,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.achan.entity.base.BillBase" >
    update bill
    <set >
      <if test="number != null" >
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="outIn != null" >
        out_in = #{outIn,jdbcType=BIT},
      </if>
      <if test="outInTypeId != null" >
        out_in_type_id = #{outInTypeId,jdbcType=CHAR},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null" >
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null" >
        updateuser = #{updateuser,jdbcType=VARCHAR},
      </if>
      <if test="storehouseId != null" >
        storehouse_id = #{storehouseId,jdbcType=CHAR},
      </if>
      <if test="fromTo != null" >
        from_to = #{fromTo,jdbcType=VARCHAR},
      </if>
      <if test="applytime != null" >
        applytime = #{applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="applyUserId != null" >
        apply_user_id = #{applyUserId,jdbcType=CHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.achan.entity.base.BillBase" >
    update bill
    set number = #{number,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      out_in = #{outIn,jdbcType=BIT},
      out_in_type_id = #{outInTypeId,jdbcType=CHAR},
      count = #{count,jdbcType=INTEGER},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      updateuser = #{updateuser,jdbcType=VARCHAR},
      storehouse_id = #{storehouseId,jdbcType=CHAR},
      from_to = #{fromTo,jdbcType=VARCHAR},
      applytime = #{applytime,jdbcType=TIMESTAMP},
      apply_user_id = #{applyUserId,jdbcType=CHAR},
      state = #{state,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>